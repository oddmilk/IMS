# 内科
# 北京
BJ_internal_medicine = ['http://www.guahao.com/search/expert?iSq=&fhc=&fg=&q=内科&pi=1&p=北京&ci=all&c=不限&pageNo=' + str(i+1) for i in range(url_range[0])]
SH_internal_medicine = ['http://www.guahao.com/search/expert?iSq=&fhc=&fg=&q=内科&pi=2&p=上海&ci=all&c=不限&pageNo=' + str(i+1) for i in range(url_range[1])]
TJ_internal_medicine = ['http://www.guahao.com/search/expert?iSq=&fhc=&fg=&q=内科&pi=3&p=天津&ci=all&c=不限&pageNo=' + str(i+1) for i in range(url_range[2])]
CQ_internal_medicine = ['http://www.guahao.com/search/expert?iSq=&fhc=&fg=&q=内科&pi=4&p=重庆&ci=all&c=不限&pageNo=' + str(i+1) for i in range(url_range[3])]

link_table = [] # create an empty list to store extracted HTML data

list_hcp_url = []
list_hcp_name = []
list_hcp_subtype = [] # professional subtype: 主任，副主任，主治，副主治医师，etc
list_wkp = []
list_hco = []

BJ = BJ_internal_medicine

for link in BJ:
    res = requests.get(link)  # create a response object
    soup = BeautifulSoup(res.text.encode("utf-8"), "lxml") # The soup object contains all of the HTML in the original document
    table = soup.findAll("div", {"class": "g-doc-baseinfo"})  # this div is where individual profile, title, wkp, hospital all live
    link_table.append(table)
    hcp_url = []
    hcp_name = []
    hcp_subtype = []
    wkp = []
    hco = []
    # for each extracted individual, extract the five things we want: Name, title, wkp, hospital, profile source
    for div in table:
        a = div.findAll('a')[1]
        b = div.findAll('a')[2]
        c = div.findAll('a')[3]
        hcp_url.append(a['href']) # extract profile src (url)
        hcp_name.append(div.dt.contents[1].get_text().strip())
        hcp_subtype.append(div.dt.contents[2].strip())  # professional subtype is stored as navigatestring
        wkp.append(b.get_text().strip())
        hco.append(c.get_text().strip())
    list_hcp_url.append(hcp_url)
    list_hcp_name.append(hcp_name)
    list_hcp_subtype.append(hcp_subtype)
    list_wkp.append(wkp)
    list_hco.append(hco)

for idx in enumerate(JS):
    print (idx)

# merge/flatten list of lists; convert into a data frame; write to excel
def flatten(input_list):
    output_list = []
    for element in input_list:
        if type(element) == list:
            output_list.extend(flatten(element))
        else:
            output_list.append(element)
    return output_list

out_hcp_url = flatten(list_hcp_url)
out_hcp_name = flatten(list_hcp_name)
out_hcp_subtype = flatten(list_hcp_subtype)
out_wkp = flatten(list_wkp)
out_hco = flatten(list_hco)
